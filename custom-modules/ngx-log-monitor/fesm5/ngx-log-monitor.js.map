{"version":3,"file":"ngx-log-monitor.js.map","sources":["ng://ngx-log-monitor/lib/helpers/log-message.helper.ts","ng://ngx-log-monitor/lib/log-monitor.component.ts","ng://ngx-log-monitor/lib/log-monitor.module.ts"],"sourcesContent":["import {LogMessage} from '../models/log-message.model';\n\nexport const normalizeLogMessage = (msg: LogMessage): LogMessage => ({\n  ...msg,\n  type: (msg.type ? msg.type : 'LOG'),\n  timestamp: (msg.timestamp ? msg.timestamp : new Date().toLocaleString() )\n});\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input, NgZone,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {LogMessage} from './models/log-message.model';\nimport {normalizeLogMessage} from './helpers/log-message.helper';\n\n@Component({\n  selector: 'log-monitor',\n  template: `\n<div *ngIf=\"title\" class=\"title-bar\" [ngClass]=\"theme+'-theme'\">&#9002; {{title}}</div>\n<div\n  #container\n  class=\"container\"\n  [ngClass]=\"theme+'-theme'\"\n>\n  <span\n    class=\"msg-item {{'msg-'+(log.type) | lowercase }}\"\n    *ngFor=\"let log of history\"\n    [ngClass]=\"{'animated': animated}\"\n  >\n    <span *ngIf=\"icons\" [ngSwitch]=\"log.type\">\n      <ng-container *ngSwitchCase=\"'ERR'\">&#10008;</ng-container>\n      <ng-container *ngSwitchCase=\"'SUCCESS'\">&#10004;</ng-container>\n      <ng-container *ngSwitchCase=\"'LOG'\">&#10097;</ng-container>\n      <ng-container *ngSwitchCase=\"'WARN'\">&#8252;</ng-container>\n      <ng-container *ngSwitchCase=\"'INFO'\">&#8505;</ng-container>\n    </span>\n\n    [{{log.timestamp}}]: {{log.message}}\n  </span>\n\n</div>\n`,\n  styles: [`.container{position:relative;width:100%;height:100%;padding-top:5px;padding-bottom:5px;overflow-y:auto;font-family:\"Lucida Console\",Monaco,monospace,sans-serif}.animated{-webkit-animation:260ms fadein;animation:260ms fadein}@-webkit-keyframes fadein{from{opacity:0;-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes fadein{from{opacity:0;-webkit-transform:translateY(-10px);transform:translateY(-10px)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}.title-bar{padding:5px;font-weight:600}.dark-theme.title-bar{border-bottom:1px solid #3c3c3c;background:#1f1f1f}.light-theme.title-bar{border-bottom:1px solid #a8acad;background:#dbdfe0}.msg-item{display:block;margin-left:6px;font-size:.85em}.msg-list{margin:0;height:100%}.light-theme{color:#212121;background:#ecf0f1}.light-theme .msg-info{color:#2980b9}.light-theme .msg-err{color:#c0392b}.light-theme .msg-success{color:#27ae60}.light-theme .msg-warn{color:#f39c12}.dark-theme{color:#ecf0f1;background:#212121}.dark-theme .msg-info{color:#3498db}.dark-theme .msg-err{color:#e74c3c}.dark-theme .msg-success{color:#2ecc71}.dark-theme .msg-warn{color:#f1c40f}`],\n  })\nexport class LogMonitorComponent implements OnChanges, AfterViewInit {\n\n  @Input() title;\n  @Input() logStream: LogMessage;\n  @Input() history: LogMessage[] = [];\n  @Input() theme: 'dark' | 'light' = 'dark';\n  @Input() icons = true;\n  @Input() customClass = 'log-container';\n  @Input() animated = true;\n  @ViewChild('container') container: ElementRef;\n\n  constructor(private zone: NgZone) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes.history) {\n      this.history = changes.history.currentValue.map(normalizeLogMessage);\n    }\n\n    if (changes.logStream && changes.logStream.currentValue) {\n\n      this.zone.run(() => {\n        const normalizedMsg = normalizeLogMessage(changes.logStream.currentValue);\n        this.history.push(normalizedMsg);\n        setTimeout(() => this.scrollToBottom());\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.scrollToBottom();\n  }\n\n  private scrollToBottom() {\n    this.container.nativeElement.scrollTop = this.container.nativeElement.scrollHeight;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LogMonitorComponent } from './log-monitor.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LogMonitorComponent],\n  exports: [LogMonitorComponent]\n})\nexport class LogMonitorModule { }\n"],"names":[],"mappings":";;;;;;;;AAEO,qBAAM,mBAAmB,GAAG,UAAC,GAAe;IAAiB,qBAC/D,GAAG,IACN,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,EACnC,SAAS,GAAG,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,CAAE;CACzE,CAAC;;;;;;ACNH;IAuDE,6BAAoB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;uBAPC,EAAE;qBACA,MAAM;qBACxB,IAAI;2BACE,eAAe;wBAClB,IAAI;KAGa;;;;;IAErC,yCAAW;;;;IAAX,UAAY,OAAsB;QAAlC,iBAcC;QAZC,IAAI,OAAO,aAAU;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,YAAS,YAAY,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACtE;QAED,IAAI,OAAO,iBAAc,OAAO,cAAW,YAAY,EAAE;YAEvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,qBAAM,aAAa,GAAG,mBAAmB,CAAC,OAAO,cAAW,YAAY,CAAC,CAAC;gBAC1E,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACjC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,GAAA,CAAC,CAAC;aACzC,CAAC,CAAC;SACJ;KACF;;;;IAED,6CAAe;;;IAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;;IAEO,4CAAc;;;;QACpB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;;;gBAhEtF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,uyBAwBX;oBACC,MAAM,EAAE,CAAC,8sCAA4sC,CAAC;oBACttC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBAtCQ,MAAM;;;0BAyCZ,KAAK;8BACL,KAAK;4BACL,KAAK;0BACL,KAAK;0BACL,KAAK;gCACL,KAAK;6BACL,KAAK;8BACL,SAAS,SAAC,WAAW;;8BArDxB;;;;;;;ACAA;;;;gBAIC,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B;;2BARD;;;;;;;;;;;;;;;"}
